package co.edu.uniquindio.gohost.service.mail;

import org.springframework.lang.NonNull;

/**
 * ============================================================================
 * üìß MailService ‚Äî Contrato para el env√≠o de correos transaccionales
 * ============================================================================
 *
 * Responsabilidades:
 *  - Enviar correos electr√≥nicos en formato HTML (UTF-8).
 *  - Centralizar la l√≥gica de notificaciones por correo dentro del sistema GoHost.
 *
 * Caracter√≠sticas:
 *  - Soporta HTML con codificaci√≥n UTF-8.
 *  - Expone una API sencilla orientada a casos comunes de negocio.
 *
 * Reglas generales:
 *  - Los m√©todos pueden lanzar excepciones controladas de tipo {@link Exception}
 *    si ocurre un error durante el env√≠o (autenticaci√≥n, red, formato, etc.).
 *  - Los par√°metros obligatorios deben ser validados antes del env√≠o.
 *  - La configuraci√≥n SMTP se obtiene desde el archivo `application.yml`:
 *
 *        spring.mail.host, spring.mail.port, spring.mail.username, spring.mail.password
 *
 * Buenas pr√°cticas:
 *  - No incluir informaci√≥n sensible (contrase√±as o tokens) en los logs.
 *  - Mantener la codificaci√≥n UTF-8 en el asunto y cuerpo del correo.
 */
public interface MailService {

    /**
     * Env√≠o simple de correo en HTML (UTF-8).
     * Usar este m√©todo para la mayor√≠a de notificaciones (recuperaci√≥n de contrase√±a, confirmaciones, etc.).
     *
     * @param to      destinatario principal (obligatorio)
     * @param subject asunto del correo (obligatorio)
     * @param html    cuerpo en HTML (obligatorio)
     */
    void sendMail(@NonNull String to,
                @NonNull String subject,
                @NonNull String html) throws Exception;

}
